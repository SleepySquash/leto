"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9193],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,y=m["".concat(o,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:6},i="Types",p={unversionedId:"leto_schema/types",id:"leto_schema/types",title:"Types",description:"All of the GraphQL scalar types are built in, as well as a Date type:",source:"@site/docs/leto_schema/types.md",sourceDirName:"leto_schema",slug:"/leto_schema/types",permalink:"/leto/docs/leto_schema/types",draft:!1,editUrl:"https://github.com/juancastillo0/leto/edit/main/leto_schema/README.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Helpers",permalink:"/leto/docs/leto_schema/helpers"},next:{title:"leto_generator",permalink:"/leto/docs/category/leto_generator"}},o={},s=[{value:"Non-Nullable Types",id:"non-nullable-types",level:2},{value:"List Types",id:"list-types",level:2},{value:"Input values and parameters",id:"input-values-and-parameters",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"types"},"Types"),(0,r.kt)("p",null,"All of the GraphQL scalar types are built in, as well as a ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," type:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLString")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLBoolean")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLInt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLFloat")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphQLDate"))),(0,r.kt)("h2",{id:"non-nullable-types"},"Non-Nullable Types"),(0,r.kt)("p",null,"You can easily make a type non-nullable by calling its ",(0,r.kt)("inlineCode",{parentName:"p"},"nonNullable")," method."),(0,r.kt)("h2",{id:"list-types"},"List Types"),(0,r.kt)("p",null,"Support for list types is also included. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"listType")," helper for convenience."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"/// A non-nullable list of non-nullable integers\nlistOf(graphQLInt.nonNullable()).nonNullable();\n")),(0,r.kt)("h3",{id:"input-values-and-parameters"},"Input values and parameters"),(0,r.kt)("p",null,"Take the following GraphQL query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n   anime {\n     characters(title: "Hunter x Hunter") {\n        name\n        age\n     }\n   }\n}\n')),(0,r.kt)("p",null,"And subsequently, its schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type AnimeQuery {\n  characters($title: String!): [Character!]\n}\n\ntype Character {\n  name: String\n  age: Int\n}\n")),(0,r.kt)("p",null,"The field ",(0,r.kt)("inlineCode",{parentName:"p"},"characters")," accepts a parameter, ",(0,r.kt)("inlineCode",{parentName:"p"},"title"),". To reproduce this in\n",(0,r.kt)("inlineCode",{parentName:"p"},"package:leto_schema"),", use ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLFieldInput"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final GraphQLObjectType queryType = objectType('AnimeQuery', fields: [\n  field('characters',\n    listOf(characterType.nonNullable()),\n    inputs: [\n      new GraphQLFieldInput('title', graphQLString.nonNullable())\n    ]\n  ),\n]);\n\nfinal GraphQLObjectType characterType = objectType('Character', fields: [\n  field('name', graphQLString),\n  field('age', graphQLInt),\n]);\n")),(0,r.kt)("p",null,"In the majority of cases where you use GraphQL, you will be delegate the\nactual fetching of data to a database object, or some asynchronous resolver\nfunction."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"package:leto_schema")," includes this functionality in the ",(0,r.kt)("inlineCode",{parentName:"p"},"resolve")," property,\nwhich is passed a context object and a ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<String, dynamic>")," of arguments."),(0,r.kt)("p",null,"A hypothetical example of the above might be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"var field = field(\n  'characters',\n  graphQLString,\n  resolve: (_, args) async {\n    return await myDatabase.findCharacters(args['title']);\n  },\n);\n")))}u.isMDXComponent=!0}}]);